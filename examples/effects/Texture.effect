// texture effect
{
	"name"				: "texture",
	"attributeBindings"	: {
		"position"				: "geometry/vertex/attribute/position",
		"uv"					: "geometry/vertex/attribute/uv"
	},
	"uniformBindings"	: {
		"diffuseMap"			: "material/diffuse/map",
		"modelToWorldMatrix"	: "transform/modelToWorldMatrix",
		"worldToScreenMatrix"	: "transform/worldToScreenMatrix"
	},
	"stateBindings"		: {
		// nothing
	},
	"passes"	: [{
		"vertexShader"	: "
			attribute vec3 position;
			attribute vec2 uv;

			uniform mat4 modelToWorldMatrix;
			uniform mat4 worldToScreenMatrix;
			
			varying vec2 vertexUV;

			void main(void)
			{
				vertexUV = uv;
			
				gl_Position =  worldToScreenMatrix * modelToWorldMatrix * vec4(position, 1.0);
			}
		",
		"fragmentShader"	: "
			uniform sampler2D diffuseMap;
			
			varying vec2 vertexUV;

			void main(void)
			{
				gl_FragColor = texture2D(diffuseMap, vertexUV);
			}
		"
	}]
}
