// particles effect
{
	"name"	: "particles",
	
	"attributeBindings"	: {
		"offset"				: "geometry.vertex.attribute.offset",
		"position"				: "geometry.vertex.attribute.position"
	},
	
	"uniformBindings"	: {
		"modelToWorldMatrix"	: "transform.modelToWorldMatrix",
		"viewMatrix"			: "camera.viewMatrix",
		"projectionMatrix"		: "camera.projectionMatrix",
		"worldToScreenMatrix"	: "camera.worldToScreenMatrix"
	},

	"macroBindings"	: {
		"WORLDSPACE_PARTICLES"	: "particles.worldspace"
	},
	
	"priority"			: 0,
	"blendMode"			: "additive",
	"depthTest"			: [false, "less"],
	"triangleCulling"	: "front",
	
	"passes"	: [{	
		"vertexShader"	: "
			attribute vec2 offset;
			attribute vec3 position;

			
			uniform mat4 modelToWorldMatrix;
			uniform mat4 viewMatrix;
			uniform mat4 projectionMatrix;

			void main(void)
			{
				vec4 pos;
				
			#ifdef WORLDSPACE_PARTICLES	
				pos = viewMatrix * vec4(position, 1.0);
			#else
				pos = viewMatrix * modelToWorldMatrix * vec4(position, 1.0);
			#endif
			
				pos += vec4(offset, 0, 0);
			
				gl_Position = projectionMatrix * pos;
			}
		",
		"fragmentShader"	: "
				
			void main(void)
			{			
				gl_FragColor = vec4(1, 1, .01, 1);
			}
		"
	}]
}
