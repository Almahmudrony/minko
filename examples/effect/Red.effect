// red effect
{
	"name"		: "red",
	"attributeBindings"	: {
		"position"				: "geometry.vertex.attribute.position"
	},
	"uniformBindings"	: {
		"modelToWorldMatrix"	: "transform.modelToWorldMatrix",
		"worldToScreenMatrix"	: "camera.worldToScreenMatrix"
	},
	"passes"	: [{
		"vertexShader"	: "
			attribute vec3 position;

			uniform mat4 modelToWorldMatrix;
			uniform mat4 worldToScreenMatrix;

			void main(void)
			{
				gl_Position =  worldToScreenMatrix * modelToWorldMatrix * vec4(position, 1.0);
			}
		",
		"fragmentShader"	: "
			precision highp float;
			
			void main(void)
			{
				gl_FragColor = vec4(1, 0, 0, 1);
			}
		"
	}]
}
