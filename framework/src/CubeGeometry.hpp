#pragma once

#include <memory>

#include "Geometry.hpp"

class CubeGeometry :
	public Geometry
{
public:
	typedef std::shared_ptr<Geometry> ptr;

	static
	ptr
	create()
	{
		return std::shared_ptr<CubeGeometry>(new CubeGeometry());
	}

protected:
	CubeGeometry()
	{
		// short* i = new short[36];
		// Geometry::VertexXYZ xyz[] = new Geometry::VertexXYZ[36];

		Geometry::VertexXYZ xyz[] = {
			{0.5, 0.5, 0.5}, 	{-0.5, 0.5, -0.5}, 	{0.5, 0.5, -0.5},
			{0.5, 0.5, 0.5}, 	{-0.5, 0.5, 0.5}, 	{-0.5, 0.5, -0.5},
			{-0.5, -0.5, -0.5}, {0.5, -0.5, 0.5},	{0.5, -0.5, -0.5},
			{-0.5, -0.5, 0.5},	{0.5, -0.5, 0.5},	{-0.5, -0.5, -0.5},
			{0.5, -0.5, 0.5},	{-0.5, 0.5, 0.5},	{0.5, 0.5, 0.5},
			{-0.5, 0.5, 0.5},	{0.5, -0.5, 0.5},	{-0.5, -0.5, 0.5},
			{-0.5, 0.5, -0.5},	{-0.5, -0.5, -0.5},	{0.5, 0.5, -0.5},
			{-0.5, -0.5, -0.5},	{0.5, -0.5, -0.5},	{0.5, 0.5, -0.5},
			{-0.5, -0.5, -0.5},	{-0.5, 0.5, 0.5},	{-0.5, -0.5, 0.5},
			{-0.5, 0.5, 0.5},	{-0.5, -0.5, -0.5},	{-0.5, 0.5, -0.5},
			{0.5, -0.5, 0.5},	{0.5, 0.5, 0.5},	{0.5, 0.5, -0.5},
			{0.5, 0.5, -0.5},	{0.5, -0.5, -0.5},	{0.5, -0.5, 0.5}
		};

		vertices(xyz);

		short i[] = {
			0, 1, 2, 3, 4, 5,
			6, 7, 8, 9, 10, 11,
			12, 13, 14, 15, 16, 17,
			18, 19, 20, 21, 22, 23,
			24, 25, 26, 27, 28, 29,
			30, 31, 32, 33, 34, 35
		};

		indices(i);
	}
};