// phong effect
{
	"name"	: "phong",
	
	"attributeBindings"	: {
		"position"					: "geometry.vertex.attribute.position",
		"uv"						: "geometry.vertex.attribute.uv",
		"normal"					: "geometry.vertex.attribute.normal",
		"tangent"					: "geometry.vertex.attribute.tangent"
	},
	
	"uniformBindings"	: {
		"diffuseColor"				: "material.diffuseColor",
		"diffuseMap"				: "material.diffuseMap",
		"normalMap"					: "material.normalMap",
		"specularMap"				: "material.specularMap",
		"alphaMap"					: "material.alphaMap",
		"shininess"					: "material.shininess",
		"alphaThreshold"			: "material.alphaThreshold",
		"modelToWorldMatrix"		: "transform.modelToWorldMatrix",
		"worldToScreenMatrix"		: "camera.worldToScreenMatrix",
		"cameraPosition"			: "camera.position"
	},
	
	"stateBindings"	: {
		"blendMode"					: "material.blendMode",
		"triangleCulling"			: "material.triangleCulling"
	},

	"macroBindings"	: {
		"DIFFUSE_MAP"				: "material.diffuseMap",
		"NORMAL_MAP"				: "material.normalMap",
		"SPECULAR_MAP"				: "material.specularMap",
		"ALPHA_MAP"					: "material.alphaMap",
		"ALPHA_THRESHOLD"			: "material.alphaThreshold",
		"SHININESS"					: "material.shininess",
		"MODEL_TO_WORLD"			: "transform.modelToWorldMatrix",
		"NUM_AMBIENT_LIGHTS"		: "ambientLights.length",
		"PRECOMPUTED_AMBIENT"		: "sumAmbients",
		"NUM_DIRECTIONAL_LIGHTS"	: { "property" : "directionalLights.length", "max" : 8 },
		"NUM_POINT_LIGHTS"			: { "property" : "pointLights.length", "max" : 8 },
		"NUM_SPOT_LIGHTS"			: { "property" : "spotLights.length", "max" : 8 }
	},

	"defaultTechnique" : "single-pass",
	
	"samplerStates" : {
		"diffuseMap"	: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" },
		"normalMap"		: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" },
		"specularMap"	: { "wrapMode" : "repeat", "textureFilter" : "linear", "mipFilter" : "linear" }
	},

	"techniques" : [
		{
			"name"	: "single-pass",

			"priority"			: 0,
			"blendMode"			: ["one", "zero"],
			"depthTest"			: [true, "less_equal"],
			"triangleCulling"	: "back",

			"passes"	: [{
				"vertexShader" : {
					"includes" : [
						"Phong.vertex.glsl"
					]
				},
				"fragmentShader" : {
					"includes" : [
						"Phong.struct.glsl",
						"Phong.function.glsl",
						"Phong.fragment.glsl"
					]
				}
			}]
		},
		{
			"name" 		: "multi-pass",

			"passes" 	: [{
				"includes" : [ "Basic.vertex.glsl", "Basic.fragment.glsl" ]
			}]
		}
	]
}
