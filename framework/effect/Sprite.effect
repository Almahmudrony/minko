// sprite effect
{
	"name" : "sprite",
	
	"attributeBindings" : {
		"aPosition"				: "geometry.vertex.attribute.position",
		"aUV"					: "geometry.vertex.attribute.uv"
	},
	
	"uniformBindings" : {
		"uDiffuseColor"			: "material.diffuseColor",
		"uDiffuseMap"			: "material.diffuseMap",
		"uDiffuseTint"			: "material.diffuseTint",
		"uModelToWorldMatrix"	: "transform.modelToWorldMatrix",
		"uViewMatrix"			: { "property" : "camera.viewMatrix", "source" : "renderer" },
		"uProjectionMatrix"		: { "property" : "camera.projectionMatrix", "source" : "renderer" }
	},
	
	"stateBindings" : {
        "blendMode"             : "material.blendMode",
        "colorMask"             : "material.colorMask",
        "depthMask"             : "material.depthMask",
        "depthFunc"             : "material.depthFunc",
        "triangleCulling"       : "material.triangleCulling",
        "stencilFunc"           : "material.stencilFunc",
        "stencilRef"            : "material.stencilRef",
        "stencilMask"           : "material.stencilMask",
        "stencilFailOp"         : "material.stencilFailOp",
        "stencilZFailOp"        : "material.stencilZFailOp",
        "stencilZPassOp"        : "material.stencilZPassOp",
        "scissorBox.x"          : { "property" : "scissorBox.x",        "source" : "renderer" },
        "scissorBox.y"          : { "property" : "scissorBox.y",        "source" : "renderer" },
        "scissorBox.width"      : { "property" : "scissorBox.width",    "source" : "renderer" },
        "scissorBox.height"     : { "property" : "scissorBox.height",   "source" : "renderer" },
        "priority"              : "material.priority"
    },

	"macroBindings"	: {
		"DIFFUSE_MAP"			: "material.diffuseMap",
		"DIFFUSE_TINT"			: "material.diffuseTint"
	},
	
	"passes" : [{
		"priority"			: [ "transparent", 0.0 ],
		"blendMode"         : "additive",
		"depthTest"         : [ false, "less_equal" ],
		"triangleCulling"   : "none",
		"vertexShader" 		: "#pragma include('Sprite.vertex.glsl')",
		"fragmentShader" 	: "#pragma include('Sprite.fragment.glsl')"
	}]
}
