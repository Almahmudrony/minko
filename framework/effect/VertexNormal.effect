{
	"name"				: "normal",

	"attributeBindings"	: {
		"position"				: "geometry.vertex.attribute.position",
		"normal"				: "geometry.vertex.attribute.normal",
		"boneIdsA"				: "geometry.vertex.attribute.boneIdsA",
		"boneIdsB"				: "geometry.vertex.attribute.boneIdsB",		
		"boneWeightsA"			: "geometry.vertex.attribute.boneWeightsA",
		"boneWeightsB"			: "geometry.vertex.attribute.boneWeightsB"
	},

	"uniformBindings"	: {
        "modelToWorldMatrix"    : "transform.modelToWorldMatrix",
        "worldToScreenMatrix"   : { "property" : "camera.worldToScreenMatrix", "source" : "renderer" },
		"boneMatrices"			: { "property" : "geometry.boneMatrices",		"source" : "target" },
		"numBones"				: { "property" : "geometry.numBones",			"source" : "target" }
	},
	
	"stateBindings" : {
        "blendMode"             : "material.blendMode",
        "colorMask"             : "material.colorMask",
        "depthMask"             : "material.depthMask",
        "depthFunc"             : "material.depthFunc",
        "triangleCulling"       : "material.triangleCulling",
        "stencilFunc"           : "material.stencilFunc",
        "stencilRef"            : "material.stencilRef",
        "stencilMask"           : "material.stencilMask",
        "stencilFailOp"         : "material.stencilFailOp",
        "stencilZFailOp"        : "material.stencilZFailOp",
        "stencilZPassOp"        : "material.stencilZPassOp",
        "scissorBox.x"          : { "property" : "scissorBox.x",        "source" : "renderer" },
        "scissorBox.y"          : { "property" : "scissorBox.y",        "source" : "renderer" },
        "scissorBox.width"      : { "property" : "scissorBox.width",    "source" : "renderer" },
        "scissorBox.height"     : { "property" : "scissorBox.height",   "source" : "renderer" },
        "priority"              : "material.priority"
    },

	"macroBindings"	: {
		"NUM_BONES"				: { "property" : "geometry.numBones",	"source" : "target" }
	},

	"priority"		: 0,
	"blendMode"		: ["one", "zero"],
	"depthTest"		: [true, "less"],
	
	"passes"	: [{
		"vertexShader"	: "
			uniform mat4 modelToWorldMatrix;
			uniform mat4 worldToScreenMatrix;

			attribute vec3 position;
			attribute vec3 normal;

			varying vec3 worldNormal;

			#pragma include('Skinning.function.glsl')

			void main(void)
			{
				vec4 pos    = vec4(position, 1.0);
				vec4 n 		= vec4(normal, 0.0); 

				
				#ifdef NUM_BONES
					pos 	= skinning_moveVertex(pos);
					n 		= skinning_moveVertex(n);
				#endif // NUM_BONES
				
				worldNormal = normalize(mat3(modelToWorldMatrix) * n.xyz);

				gl_Position =  worldToScreenMatrix * modelToWorldMatrix * pos;
			}
		",
		"fragmentShader"	: "
			varying vec3 worldNormal;

			void main(void)
			{
				gl_FragColor = vec4((worldNormal.rgb + 1) * .5, 1);
			}
		"
	}]
}
