// basic effect
{
	"name"	: "basic",
	
	"attributeBindings"	: {
		"position"				: "geometry.vertex.attribute.position",
		"uv"					: "geometry.vertex.attribute.uv"
	},
	
	"uniformBindings"	: {
		"diffuseColor"			: "material.diffuseColor",
		"diffuseMap"			: "material.diffuseMap",
		"modelToWorldMatrix"	: "transform.modelToWorldMatrix",
		"worldToScreenMatrix"	: "camera.worldToScreenMatrix"
	},
	
	"stateBindings"	: {
		"blendMode"				: "material.blendMode"
	},

	"macroBindings"	: {
		"TECHNIQUE_DIFFUSE_MAP"	: "material.diffuseMap"
	},
	
	"priority"			: 0,
	"blendMode"			: ["one", "zero"],
	"depthTest"			: [true, "less"],
	"triangleCulling"	: "back",
	
	"passes"	: [{	
		"vertexShader"	: "
			attribute vec3 position;
			attribute vec3 uv;

			uniform mat4 modelToWorldMatrix;
			uniform mat4 worldToScreenMatrix;

			varying vec2 vertexUV;

			void main(void)
			{
				#ifdef TECHNIQUE_DIFFUSE_MAP
					vertexUV = uv;
				#endif

				gl_Position =  worldToScreenMatrix * modelToWorldMatrix * vec4(position, 1.0);
			}
		",
		"fragmentShader"	: "
			uniform vec4 diffuseColor;
			uniform sampler2D diffuseMap;
			
			varying vec2 vertexUV;

			void main(void)
			{
				#ifdef TECHNIQUE_DIFFUSE_MAP
					gl_FragColor = texture2D(diffuseMap, vertexUV);
				#else
					gl_FragColor = diffuseColor;
				#endif
			}
		"
	}]
}
