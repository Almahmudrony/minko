{
	"name"  : "vertex-normal",

	"attributes"	: {
		"position"      : "geometry[${geometryUuid}].position",
		"normal"		: "geometry[${geometryUuid}].normal",
		"boneIdsA"		: "geometry[${geometryUuid}].boneIdsA",
		"boneIdsB"		: "geometry[${geometryUuid}].boneIdsB",		
		"boneWeightsA"	: "geometry[${geometryUuid}].boneWeightsA",
		"boneWeightsB"	: "geometry[${geometryUuid}].boneWeightsB"
	},

	"uniforms"	: {
        "modelToWorldMatrix"    : "modelToWorldMatrix",
        "worldToScreenMatrix"   : { "binding" : { "property" : "worldToScreenMatrix", "source" : "renderer" } },
		"boneMatrices"			: "geometry[${geometryUuid}].boneMatrices",
		"numBones"				: "geometry[${geometryUuid}].numBones"
	},

	"macros"	: {
		"MODEL_TO_WORLD"    : "modelToWorldMatrix",
		"NUM_BONES"			: "geometry[${geometryUuid}].numBones"
	},

    "techniques" : [{
    	"passes"	: [{
		    "vertexShader" : "
		
                #ifdef GL_FRAGMENT_PRECISION_HIGH
                    precision highp float;
                #else
                    precision mediump float;
                #endif

			    uniform mat4 modelToWorldMatrix;
			    uniform mat4 worldToScreenMatrix;

			    attribute vec3 position;
			    attribute vec3 normal;

			    varying vec3 worldNormal;

			    #pragma include \"Skinning.function.glsl\"

			    void main(void)
			    {
				    vec4 pos    = vec4(position, 1.0);
				vec4 n 		= normalize(vec4(normal, 0.0)); 

				
				    #ifdef NUM_BONES
					    pos 	= skinning_moveVertex(pos);
					    n 		= skinning_moveVertex(n);
				    #endif // NUM_BONES
				
				worldNormal	= normalize(n.xyz);

				    #ifdef MODEL_TO_WORLD
					    pos 		= modelToWorldMatrix * pos;
					    worldNormal	= mat3(modelToWorldMatrix) * worldNormal;
				    #endif // MODEL_TO_WORLD

				    gl_Position =  worldToScreenMatrix * pos;
			    }
		    ",
		    "fragmentShader" : "
			    #ifdef GL_ES
				    precision mediump float;
			    #endif

			    varying vec3 worldNormal;

			    void main(void)
			    {
				    gl_FragColor = vec4((normalize(worldNormal.xyz) + 1.0) * 0.5, 1.0);
			    }
		    "
	    }]
    }]
}
