{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"count"
			],
			[
				"_verte",
				"_vertexSize"
			],
			[
				"vb",
				"vb"
			],
			[
				"num",
				"numMeridians"
			],
			[
				"ini",
				"initializeIndices"
			],
			[
				"with",
				"withNormals"
			],
			[
				"nu",
				"numMeridians"
			],
			[
				"at",
				"attributeName"
			],
			[
				"attrib",
				"attributeName"
			],
			[
				"attr",
				"AttributePtr"
			],
			[
				"Attr",
				"AttributePtr"
			],
			[
				"attri",
				"attributeName"
			],
			[
				"ver",
				"vertexSizeChanged"
			],
			[
				"vertex",
				"vertexBuffer"
			],
			[
				"_",
				"_vertexSizeChanged"
			],
			[
				"_ver",
				"_vertexSize"
			],
			[
				"_v",
				"_vbToVertexSizeChangedSlot"
			],
			[
				"ve",
				"vertexSizeChanged"
			],
			[
				"verte",
				"vertexBuffer"
			],
			[
				"Verte",
				"VertexBufferPtr"
			],
			[
				"vet",
				"vertexSize"
			],
			[
				"sha",
				"shared_ptr"
			],
			[
				"att",
				"attributes"
			],
			[
				"add",
				"addChild"
			],
			[
				"bind",
				"bindingDefines"
			],
			[
				"bindin",
				"bindingValues"
			],
			[
				"pro",
				"programInputs"
			],
			[
				"sign",
				"signatureAndProgram"
			],
			[
				"create",
				"createDrawCalls"
			],
			[
				"Draw",
				"DrawCallList"
			],
			[
				"macroBindin",
				"macroBindingProperties"
			],
			[
				"macroB",
				"macroBindings"
			],
			[
				"pu",
				"push_back"
			],
			[
				"Ab",
				"AbsLightPtr"
			],
			[
				"Abs",
				"AbsLightPtr"
			],
			[
				"blue",
				"blueLight"
			],
			[
				"light",
				"lightNode2"
			],
			[
				"_pro",
				"_propertyChanged"
			],
			[
				"lig",
				"light"
			],
			[
				"Abstrac",
				"AbstractLight"
			],
			[
				"Abstr",
				"AbstractLight"
			],
			[
				"des",
				"destination"
			],
			[
				"prop",
				"propertyName2"
			],
			[
				"has",
				"hasProperty1"
			],
			[
				"am",
				"ambientLightCounter"
			],
			[
				"ambientLi",
				"ambientLight"
			],
			[
				"share",
				"shared_from_this"
			],
			[
				"_prop",
				"_propertyRemoved"
			],
			[
				"proper",
				"propertyName2"
			],
			[
				"en",
				"end"
			],
			[
				"ambi",
				"ambientLight"
			],
			[
				"_com",
				"_componentRemovedSlot"
			],
			[
				"compo",
				"component"
			],
			[
				"amb",
				"ambientLight"
			],
			[
				"tar",
				"target"
			],
			[
				"_tar",
				"_targetRemovedSlot"
			],
			[
				"node",
				"nodes"
			],
			[
				"desc",
				"descendants"
			],
			[
				"addC",
				"addChild"
			],
			[
				"del",
				"deltaNumDirectionalLights"
			],
			[
				"delta",
				"deltaNumAmbientLights"
			],
			[
				"delt",
				"deltaNumAmbientLights"
			],
			[
				"ambient",
				"ambientLights"
			],
			[
				"property",
				"propertyName"
			],
			[
				"com",
				"componentAddedHandler"
			],
			[
				"_cmo",
				"_componentAddedSlot"
			],
			[
				"added",
				"addedHandler"
			],
			[
				"vec",
				"Vector3"
			],
			[
				"ligh",
				"lightNode"
			],
			[
				"dire",
				"directionalLight"
			],
			[
				"Abstra",
				"AbstractRootDataComponent"
			],
			[
				"desce",
				"descendant"
			],
			[
				"shared",
				"shared_from_this"
			],
			[
				"target",
				"targetAddedHandler"
			],
			[
				"_target",
				"_targetAddedSlot"
			],
			[
				"Vec",
				"Vector2"
			],
			[
				"loo",
				"lookAt"
			],
			[
				"mode",
				"modelToWorld"
			],
			[
				"Abstract",
				"AbstractDiscreteLight"
			],
			[
				"ta",
				"targetRemovedHandler"
			],
			[
				"con",
				"configure"
			],
			[
				"root",
				"rootData"
			],
			[
				"provider",
				"providerPropertyAddedHandler"
			],
			[
				"line",
				"lineNumber"
			],
			[
				"glGetSh",
				"glGetShaderSource"
			],
			[
				"type",
				"typename"
			],
			[
				"macro",
				"macroBinding"
			],
			[
				"_cur",
				"_currentDepthMask"
			],
			[
				"_texture",
				"_textureSizes"
			],
			[
				"xyz",
				"xyzSize	auto"
			],
			[
				"normal",
				"normalAttr	auto"
			],
			[
				"_attribute",
				"_attributeRemoved	int"
			],
			[
				"_attributeR",
				"_attributeRemoved	int"
			],
			[
				"_attr",
				"_attributeAdded	int"
			],
			[
				"a",
				"attribute"
			],
			[
				"cot",
				"controller"
			],
			[
				"pare",
				"parentModelToWorldMatrix"
			],
			[
				"an",
				"ancestorId"
			],
			[
				"targeta",
				"targetAddedHandler"
			],
			[
				"Node",
				"NodePtr"
			],
			[
				"_rootDe",
				"_rootDescendantRemovedCd"
			],
			[
				"Ren",
				"RenderingCtrlPtr"
			],
			[
				"up",
				"updateRoot"
			],
			[
				"targetAdd",
				"targetAddedHandler"
			],
			[
				"ca",
				"callback"
			],
			[
				"sh",
				"shared_ptr"
			],
			[
				"ance",
				"ancestor"
			],
			[
				"de",
				"descendantAddedHandler"
			],
			[
				"targ",
				"targets"
			],
			[
				"descend",
				"descendants"
			],
			[
				"ances",
				"ancestors"
			],
			[
				"descen",
				"descendants"
			],
			[
				"re",
				"return"
			],
			[
				"_tag",
				"_tagsChanged"
			],
			[
				"_con",
				"_controllerRemoved"
			],
			[
				"_removed",
				"_removed"
			],
			[
				"chi",
				"child"
			],
			[
				"_chi",
				"_children"
			],
			[
				"controllerRe",
				"controllerRemovedHandler"
			],
			[
				"contr",
				"controllerAddedHandler"
			],
			[
				"enter",
				"enterFrameCallback"
			],
			[
				"chil",
				"childCds"
			],
			[
				"no",
				"NodePtr"
			],
			[
				"Abn",
				"AbstractControllerPtr"
			],
			[
				"call",
				"callbackIt"
			],
			[
				"removeC",
				"removeConnectionByIterator"
			],
			[
				"co",
				"connectionIdIt"
			],
			[
				"remove",
				"removeConnectionByIterator"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "make",
	"command_palette":
	{
		"height": 96.0,
		"selected_items":
		[
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"SUBL",
				"Preferences: SublimeClang Settings â€“ Default"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/IndexBuffer.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/IndexBuffer.hpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/render/ParticleIndexBuffer.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/OpenGLES2Context.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/VertexBuffer.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/VertexBuffer.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/DrawCall.cpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/controller/ParticleSystem.cpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/render/ParticleVertexBuffer.cpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/render/ParticleVertexBuffer.hpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/geometry/ParticlesGeometry.cpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/geometry/ParticlesGeometry.hpp",
		"/home/promethe/Projects/minko-cpp/plugins/particles/src/minko/render/ParticleIndexBuffer.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/Geometry.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/CubeGeometry.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/CubeGeometry.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/QuadGeometry.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/SphereGeometry.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/SphereGeometry.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/QuadGeometry.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/geometry/Geometry.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/AbstractResource.hpp",
		"/home/promethe/Projects/minko-cpp/examples/sponza/src/Main.cpp",
		"/home/promethe/Projects/minko-cpp/examples/cube/src/Main.cpp",
		"/home/promethe/.zshrc",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/component/PointLight.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/component/PointLight.hpp",
		"/home/promethe/conky-manager/themes/Conky Seamod/seamod_rings.lua",
		"/home/promethe/conky-manager/themes/Conky Seamod/config/conky_seamod",
		"/home/promethe/.conkyrc1",
		"/etc/default/grub",
		"/home/promethe/saucy/.config",
		"/home/promethe/saucy/ubuntu-saucy/.config",
		"/home/promethe/Downloads/wl/src/wl/sys/wl_linux.c",
		"/boot/efi/EFI/refind/refind.conf",
		"/tmp/wl/src/wl/sys/wl_linux.c",
		"/tmp/wl/wl.patch",
		"/tmp/wl/src/wl/sys/wl_dbg.h",
		"/home/promethe/Projects/minko-cpp/premake4.lua",
		"/home/promethe/Projects/minko-cpp/examples/sponza/src/minko/component/SponzaLighting.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/math/Matrix4x4.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/math/Matrix4x4.cpp",
		"/home/promethe/Projects/minko-cpp/plugins/bullet/src/minko/component/bullet/PhysicsWorld.cpp",
		"/home/promethe/Projects/minko-cpp/minko.sublime-project",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/component/Transform.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/Pass.cpp",
		"/home/promethe/Projects/minko-cpp/examples/sponza/premake4.lua",
		"/home/promethe/Projects/minko-cpp/examples/light/premake4.lua",
		"/home/promethe/Projects/minko-cpp/examples/cube/premake4.lua",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/component/Surface.cpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/component/Surface.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/Pass.hpp",
		"/home/promethe/Projects/minko-cpp/framework/src/minko/render/DrawCall.hpp",
		"/home/promethe/Projects/minko-cpp/examples/color-effect/src/Main.cpp",
		"/home/promethe/Projects/minko-cpp/.gitignore",
		"/home/promethe/Projects/minko/minko-cpp/examples/color-effect/asset/effect/Color.effect",
		"/home/promethe/Projects/minko/minko-cpp/premake4.lua",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/DrawCall.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Surface.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Pass.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/OpenGLES2Context.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/AbstractResource.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Program.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/VertexBuffer.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/file/EffectParser.cpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/light/asset/effect/Phong.effect",
		"/home/promethe/Projects/minko/minko-cpp/examples/light/src/Main.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Program.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/OpenGLES2Context.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/AbstractContext.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/webgl/src/minko/render/WebGLContext.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/webgl/src/minko/render/WebGLContext.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Pass.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Effect.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Effect.cpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/color-effect/premake4.lua",
		"/home/promethe/Projects/minko/minko-cpp/framework/effect/Basic.effect",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/ProgramInputs.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/DrawCall.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Surface.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/ArrayProvider.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/ArrayProvider.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/Provider.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/LightManager.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/LightManager.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/Container.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractLight.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractLight.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractDiscreteLight.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AmbientLight.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractDiscreteLight.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/DirectionalLight.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/DirectionalLight.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AmbientLight.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/scene/Node.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/Provider.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/effect/Phong.glsl",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/scene/Node.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractRootDataComponent.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/PerspectiveCamera.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractComponent.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Renderer.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/SceneManager.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Transform.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/bullet/src/minko/component/bullet/PhysicsWorld.cpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/bullet/src/minko/component/bullet/PhysicsWorld.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/bullet/src/minko/component/bullet/Collider.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/particles/src/minko/controller/ParticleSystem.hpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/sponza/src/minko/component/SponzaLighting.hpp",
		"/home/promethe/Projects/minko/minko-cpp/plugins/bullet/src/minko/component/bullet/Collider.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/AbstractRootDataComponent.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/math/Matrix4x4.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/Common.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/Minko.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/PerspectiveCamera.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Transform.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/math/Vector3.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/math/Matrix4x4.hpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/sponza/src/Main.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/math/Vector4.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/math/Vector2.hpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/data/Container.hpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/sponza/bin/debug/effect/SponzaLighting.effect",
		"/home/promethe/Projects/minko/minko-cpp/examples/cube/bin/debug/effect/Phong.glsl",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/component/Renderer.cpp",
		"/home/promethe/Projects/minko/minko-cpp/examples/sponza/asset/effect/SponzaLighting.effect",
		"/home/promethe/Projects/minko/minko-cpp/examples/sponza/src/minko/component/SponzaLighting.cpp",
		"/home/promethe/Projects/minko/minko-cpp/framework/src/minko/render/Shader.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/home/promethe/Projects/minko/minko-cpp/**",
			"/home/promethe/Projects/minko/minko-cpp",
			"<open files>,<open folders>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"})",
			"initStreams",
			"wl_pci_driver",
			"wl_pci_probe(",
			"wl_proc_read",
			"wl_proc_write",
			"create_proc_entry",
			"hand_fg_colour",
			"translation",
			"translationVec",
			"/*",
			"std::cout",
			"macroBindingProperties",
			"length",
			"setLightArrayLength",
			"execute",
			"stc",
			"data",
			"(\"",
			"std::shared_ptr<scene::Node>",
			"Node",
			"AbsCmp",
			")->",
			"std::cout",
			"name:",
			"std::cout",
			"HAS_MODEL_TO_WORLD",
			"TECHNIQUE_DIFFUSE_MAP",
			"\")->",
			"decompress_jp",
			"renderingComponent",
			"GL_GLEXT_PROTOTYPES",
			"texture",
			")\n",
			"std::shared_ptr<AbstractController>",
			"AbstractControllerPtr",
			"std::shared_ptr<Node>",
			"RenderingControllerPtr",
			"AbstractControllerPtr",
			"\n	",
			"CallbackIterator callbackIterator",
			"ConnectionIterator",
			"_nodes.insert(_nodes.begin()",
			"_nodes.push_back(nodes.begin()",
			"_nodes.insert",
			"list",
			"RootTransformController::",
			"Signal<ptr, ptr>::ptr",
			"std::shared_ptr<Node>",
			"td::shared_ptr<Node>",
			"TransformController::",
			" = nullptr",
			"NodeSet::",
			"NodeSet::ptr",
			"ptr",
			"std::set&",
			"GLSLShader",
			" =",
			"DataProviderPropertyWrapper",
			"property cha",
			"ShaderAdapter",
			"\n  ",
			"pair",
			"ShaderInputs",
			"allocTable",
			"ShaderInputs",
			"\n#",
			"pair",
			"std",
			"ShaderInputs",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"ShaderInputType",
			"pair",
			"tuple",
			"int ",
			"maxUniformLength",
			"name_len",
			"num",
			"vertexShaderStream",
			");",
			"dispose",
			"type/",
			"std::shared_ptr<Node>",
			"OpenGLESContext",
			"quaternion",
			"quaternion->_w",
			"quaternion->_z",
			"quaternion->_y",
			"quaternion->_x",
			"mv[15]",
			"mv[14]",
			"mv[13]",
			"mv[12]",
			"mv[11]",
			"mv[10]",
			"mv[9]",
			"mv[8]",
			"mv[7]",
			"mv[6]",
			"mv[5]",
			"mv[4]",
			"mv[3]",
			"mv[2]",
			"mv[1]",
			"mv[0]",
			"var ",
			": Number ",
			"m._m"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"NodePtr",
			"MODEL_TO_WORLD",
			"DIFFUSE_MAP",
			"renderer",
			"AbsCtrlPtr",
			"NodePtr",
			"RenderingCtrlPtr",
			"AbsCtrlPtr",
			"unsigned int id",
			"CallbackIterator",
			"_nodes.insert(_nodes.end()",
			"_nodes.insert(_nodes.begin(), nodes.begin()",
			"_nodes.push_back",
			"vector",
			"TransformController::RootTransformController::",
			"Signal<ptr, ptr>",
			"NodePtr",
			"",
			"ptr",
			"NodeSet::ptr",
			"std::set<std::shared_ptr<Node>>&",
			"GLSLProgram",
			"",
			"file",
			") = 0;",
			"delete",
			"",
			"NodePtr",
			"AbstractContext",
			"axis",
			"quaternion->w()",
			"quaternion->z()",
			"quaternion->y()",
			"quaternion->x()",
			"m33",
			"m32",
			"m31",
			"m30",
			"m23",
			"m22",
			"m21",
			"m20",
			"m13",
			"m12",
			"m11",
			"m10",
			"m03",
			"m02",
			"m01",
			"m00",
			"float ",
			"",
			"mv",
			"Vector2",
			"",
			"Vector3",
			"zAxis",
			"direction->x()",
			"eye->z()",
			"eye->y()",
			"eye->x()",
			"yAxis->z()",
			"yAxis->y()",
			"yAxis->x()",
			"xAxis->z()",
			"xAxis->y()",
			"xAxis->x()",
			"direction->y()",
			"direction->z()",
			"upAxis->x()",
			"upAxis->z()",
			"upAxis->y()",
			"Vector3",
			"Vector2",
			" =",
			"float m",
			" =",
			"	float m",
			"m.",
			"value.",
			"_m[15]",
			"_m[14]",
			"_m[13]",
			"_m[12]",
			"_m[11]",
			"_m[10]",
			"_m[9]",
			"_m[8]",
			"_m[7]",
			"_m[6]",
			"_m[5]",
			"_m[4]",
			"_m[34]",
			"_m[3]",
			"_m[2]",
			"invdet",
			"_m",
			"",
			"_m00",
			"_m03",
			"_m02",
			"_m01",
			"_m02",
			"_m00",
			"_m30",
			"_m20",
			"_m10",
			"_m31",
			"_m13",
			"_m12",
			"_m22",
			"_m21",
			"_m32",
			"_m23",
			"_m11",
			"_m33",
			"_m22",
			"",
			" matrix->_m",
			"matrix->_m",
			"tmp",
			"_vertexBuffer",
			"exception",
			"OpenGLESContext",
			"OpenGLESRenderer",
			">",
			"<",
			"shared_ptr"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 114.0
	},
	"output.exec":
	{
		"height": 92.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"particlein",
				"plugins/particles/src/minko/render/ParticleIndexBuffer.cpp"
			],
			[
				"indexbuffer",
				"framework/src/minko/render/IndexBuffer.cpp"
			],
			[
				"indexbu",
				"framework/src/minko/render/IndexBuffer.hpp"
			],
			[
				"vertex",
				"framework/src/minko/render/VertexBuffer.hpp"
			],
			[
				"opengles2con",
				"framework/src/minko/render/OpenGLES2Context.cpp"
			],
			[
				"particles",
				"plugins/particles/src/minko/controller/ParticleSystem.cpp"
			],
			[
				"pariclesys",
				"plugins/particles/src/minko/controller/ParticleSystem.cpp"
			],
			[
				"vertexb",
				"framework/src/minko/render/VertexBuffer.cpp"
			],
			[
				"particleverte",
				"plugins/particles/src/minko/render/ParticleVertexBuffer.cpp"
			],
			[
				"particlever",
				"plugins/particles/src/minko/render/ParticleVertexBuffer.hpp"
			],
			[
				"drawca",
				"framework/src/minko/render/DrawCall.cpp"
			],
			[
				"particlev",
				"plugins/particles/src/minko/render/ParticleVertexBuffer.hpp"
			],
			[
				"particlesge",
				"plugins/particles/src/minko/geometry/ParticlesGeometry.cpp"
			],
			[
				"vertexbu",
				"framework/src/minko/render/VertexBuffer.cpp"
			],
			[
				"particleg",
				"plugins/particles/src/minko/geometry/ParticlesGeometry.hpp"
			],
			[
				"particlege",
				"plugins/particles/src/minko/geometry/ParticlesGeometry.hpp"
			],
			[
				"geome",
				"framework/src/minko/geometry/Geometry.hpp"
			],
			[
				"abstractre",
				"framework/src/minko/render/AbstractResource.hpp"
			],
			[
				"particless",
				"plugins/particles/src/minko/controller/ParticleSystem.cpp"
			],
			[
				"main",
				"examples/sponza/src/Main.cpp"
			],
			[
				"drawc",
				"framework/src/minko/render/DrawCall.cpp"
			],
			[
				"poi",
				"framework/src/minko/component/PointLight.cpp"
			],
			[
				"pointl",
				"framework/src/minko/component/PointLight.hpp"
			],
			[
				"trans",
				"framework/src/minko/component/Transform.hpp"
			],
			[
				"physics",
				"plugins/bullet/src/minko/component/bullet/PhysicsWorld.cpp"
			],
			[
				"matr",
				"framework/src/minko/math/Matrix4x4.cpp"
			],
			[
				"matri",
				"framework/src/minko/math/Matrix4x4.hpp"
			],
			[
				"surfa",
				"framework/src/minko/component/Surface.hpp"
			],
			[
				"surface",
				"framework/src/minko/component/Surface.cpp"
			],
			[
				"draw",
				"framework/src/minko/render/DrawCall.hpp"
			],
			[
				"pass.",
				"framework/src/minko/render/Pass.hpp"
			],
			[
				"pass",
				"framework/src/minko/render/Pass.cpp"
			],
			[
				"effectp",
				"framework/src/minko/file/EffectParser.cpp"
			],
			[
				"phong",
				"examples/light/asset/effect/Phong.effect"
			],
			[
				"vertexbuff",
				"framework/src/minko/render/VertexBuffer.cpp"
			],
			[
				"progra",
				"framework/src/minko/render/Program.cpp"
			],
			[
				"context",
				"framework/src/minko/render/OpenGLES2Context.cpp"
			],
			[
				"phong.e",
				"examples/light/asset/effect/Phong.effect"
			],
			[
				"basic",
				"framework/effect/Basic.effect"
			],
			[
				"effect.c",
				"framework/src/minko/render/Effect.cpp"
			],
			[
				"effec",
				"framework/src/minko/render/Effect.hpp"
			],
			[
				"pass.c",
				"framework/src/minko/render/Pass.cpp"
			],
			[
				"program.c",
				"framework/src/minko/render/Program.cpp"
			],
			[
				"program",
				"framework/src/minko/render/ProgramInputs.hpp"
			],
			[
				"webglc",
				"plugins/webgl/src/minko/render/WebGLContext.cpp"
			],
			[
				"webglcon",
				"plugins/webgl/src/minko/render/WebGLContext.hpp"
			],
			[
				"dra",
				"framework/src/minko/render/DrawCall.cpp"
			],
			[
				"opengl",
				"framework/src/minko/render/OpenGLES2Context.cpp"
			],
			[
				"abstractc",
				"framework/src/minko/render/AbstractContext.hpp"
			],
			[
				"progr",
				"framework/src/minko/render/Program.hpp"
			],
			[
				"sur",
				"framework/src/minko/component/Surface.cpp"
			],
			[
				"drac",
				"framework/src/minko/render/DrawCall.hpp"
			],
			[
				"pass.h",
				"framework/src/minko/render/Pass.hpp"
			],
			[
				"cont",
				"framework/src/minko/data/Container.cpp"
			],
			[
				"contain",
				"framework/src/minko/data/Container.cpp"
			],
			[
				"arra",
				"framework/src/minko/data/ArrayProvider.hpp"
			],
			[
				"provider",
				"framework/src/minko/data/Provider.cpp"
			],
			[
				"arrayp",
				"framework/src/minko/data/ArrayProvider.cpp"
			],
			[
				"lightm",
				"framework/src/minko/component/LightManager.cpp"
			],
			[
				"abstractd",
				"framework/src/minko/component/AbstractDiscreteLight.cpp"
			],
			[
				"abstractli",
				"framework/src/minko/component/AbstractLight.cpp"
			],
			[
				"abstractl",
				"framework/src/minko/component/AbstractLight.hpp"
			],
			[
				"lightma",
				"framework/src/minko/component/LightManager.cpp"
			],
			[
				"abstractdi",
				"framework/src/minko/component/AbstractDiscreteLight.hpp"
			],
			[
				"ambientl",
				"framework/src/minko/component/AmbientLight.cpp"
			],
			[
				"directionalli",
				"framework/src/minko/component/DirectionalLight.cpp"
			],
			[
				"direction",
				"framework/src/minko/component/DirectionalLight.hpp"
			],
			[
				"abstrac",
				"framework/src/minko/component/AbstractLight.hpp"
			],
			[
				"ambien",
				"framework/src/minko/component/AmbientLight.hpp"
			],
			[
				"lightmana",
				"framework/src/minko/component/LightManager.hpp"
			],
			[
				"array",
				"framework/src/minko/data/ArrayProvider.cpp"
			],
			[
				"ambient",
				"framework/src/minko/component/AmbientLight.hpp"
			],
			[
				"dire",
				"framework/src/minko/component/DirectionalLight.cpp"
			],
			[
				"phong.gl",
				"framework/effect/Phong.glsl"
			],
			[
				"ambientli",
				"framework/src/minko/component/AmbientLight.hpp"
			],
			[
				"con",
				"framework/src/minko/data/Container.cpp"
			],
			[
				"phonge",
				"examples/light/asset/effect/Phong.effect"
			],
			[
				"node.cpp",
				"framework/src/minko/scene/Node.cpp"
			],
			[
				"abstr",
				"framework/src/minko/component/AbstractLight.cpp"
			],
			[
				"no",
				"framework/src/minko/scene/Node.hpp"
			],
			[
				"node.h",
				"framework/src/minko/scene/Node.hpp"
			],
			[
				"node.c",
				"framework/src/minko/scene/Node.cpp"
			],
			[
				"sponzal",
				"examples/sponza/src/minko/component/SponzaLighting.hpp"
			],
			[
				"collider",
				"plugins/bullet/src/minko/component/bullet/Collider.hpp"
			],
			[
				"colli",
				"plugins/bullet/src/minko/component/bullet/Collider.cpp"
			],
			[
				"physicsw",
				"plugins/bullet/src/minko/component/bullet/PhysicsWorld.hpp"
			],
			[
				"node.",
				"framework/src/minko/scene/Node.cpp"
			],
			[
				"abstractco",
				"framework/src/minko/component/AbstractComponent.hpp"
			],
			[
				"perspec",
				"framework/src/minko/component/PerspectiveCamera.hpp"
			],
			[
				"abstractroo",
				"framework/src/minko/component/AbstractRootDataComponent.hpp"
			],
			[
				"abstra",
				"framework/src/minko/component/AbstractLight.hpp"
			],
			[
				"node",
				"framework/src/minko/scene/Node.hpp"
			],
			[
				"abstractrootda",
				"framework/src/minko/component/AbstractRootDataComponent.cpp"
			],
			[
				"abstractr",
				"framework/src/minko/component/AbstractRootDataComponent.hpp"
			],
			[
				"abstractroot",
				"framework/src/minko/component/AbstractRootDataComponent.cpp"
			],
			[
				"phong.",
				"framework/effect/Phong.glsl"
			],
			[
				"direc",
				"framework/src/minko/component/DirectionalLight.cpp"
			],
			[
				"pro",
				"framework/src/minko/data/Provider.cpp"
			],
			[
				"prov",
				"framework/src/minko/data/Provider.hpp"
			],
			[
				"abrt",
				"framework/src/minko/component/AbstractRootDataComponent.hpp"
			],
			[
				"abstractrootd",
				"framework/src/minko/component/AbstractRootDataComponent.cpp"
			],
			[
				"pers",
				"framework/src/minko/component/PerspectiveCamera.cpp"
			],
			[
				"min",
				"framework/src/minko/Minko.hpp"
			],
			[
				"comm",
				"framework/src/minko/Common.hpp"
			],
			[
				"transformc",
				"framework/src/minko/component/Transform.cpp"
			],
			[
				"vec",
				"framework/src/minko/math/Vector3.hpp"
			],
			[
				"camera",
				"framework/src/minko/component/PerspectiveCamera.cpp"
			],
			[
				"phong.eff",
				"examples/light/asset/effect/Phong.effect"
			],
			[
				"phong.g",
				"framework/effect/Phong.glsl"
			],
			[
				"persec",
				"framework/src/minko/component/PerspectiveCamera.cpp"
			],
			[
				"ma",
				"framework/src/minko/math/Matrix4x4.cpp"
			],
			[
				"perse",
				"framework/src/minko/component/PerspectiveCamera.cpp"
			],
			[
				"transform",
				"framework/src/minko/component/Transform.cpp"
			],
			[
				"conta",
				"framework/src/minko/data/Container.hpp"
			],
			[
				"effectpar",
				"framework/src/minko/file/EffectParser.cpp"
			],
			[
				"provi",
				"framework/src/minko/data/Provider.cpp"
			],
			[
				"sponzali",
				"examples/sponza/asset/effect/SponzaLighting.effect"
			],
			[
				"phon",
				"examples/light/asset/effect/Phong.effect"
			],
			[
				"surface.c",
				"framework/src/minko/component/Surface.cpp"
			],
			[
				"open",
				"framework/src/minko/render/OpenGLES2Context.hpp"
			],
			[
				"shader",
				"framework/src/minko/render/Shader.cpp"
			],
			[
				"openg",
				"framework/src/minko/render/OpenGLES2Context.cpp"
			],
			[
				"container.h",
				"framework/src/minko/data/Container.hpp"
			],
			[
				"effectparser",
				"framework/src/minko/file/EffectParser.hpp"
			],
			[
				"effectparser.c",
				"framework/src/minko/file/EffectParser.cpp"
			],
			[
				"blend",
				"framework/src/minko/render/Blending.hpp"
			],
			[
				"opengle",
				"framework/src/minko/render/OpenGLES2Context.cpp"
			],
			[
				"jpgd",
				"plugins/jpeg/lib/jpeg-compressor/src/jpgd.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 271.0,
	"status_bar_visible": true
}
