{
  "name" : "desaturate",
  "attributeBindings" : {
    "aPosition" : "geometry.vertex.attribute.position",
    "aUv" : "geometry.vertex.attribute.uv"
  },
  "passes" : [{
    "vertexShader" : "
      #ifdef GL_ES
      precision mediump float;
      #endif
 
      attribute vec3 aPosition;
      attribute vec2 aUv;
 
      varying vec4 vVertexUv;
 
      void main(void)
      {
        vVertexUv = vec2(aUv.x, 1 - uv.y);
 
        gl_Position = vec4(aPosition, 1) * vec4(1., 1., 1., .5);
      }
    ",
    "fragmentShader" : "
      #ifdef GL_ES
      precision mediump float;
      #endif
 
      uniform sampler2D uBackbuffer;
 
      varying vec2 vVertexUv;
 
      void main()
      {
        vec4 pixel = texture2D(uBackbuffer, vVertexUv);
        float average = (pixel.r + pixel.g + pixel.b) / 3;
 
        gl_FragColor = vec4(average, average, average, 1);
      }
    "
  }]
}
