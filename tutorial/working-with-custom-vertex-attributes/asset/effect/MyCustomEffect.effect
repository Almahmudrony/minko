{
  "name" : "MyCustomEffect",
  "attributeBindings" : {
    "aPosition" : "geometry[${geometryId}].vertex.attribute.position",
    "aPositionOffset" : "geometry[${geometryId}].vertex.attribute.positionOffset"
  },
  "uniformBindings" : {
    "uModelToWorldMatrix" : "transform.modelToWorldMatrix",
    "uWorldToScreenMatrix" : { "property" : "camera.worldToScreenMatrix", "source" : "renderer" }
  },
  "passes" : [{
    "vertexShader" : "
      #ifdef GL_ES
      precision mediump float;
      #endif
 
      attribute vec3 aPosition;
      attribute vec3 aPositionOffset;
      attribute vec4 aVertexColor;
 
      varying vec4 vVertexColor;
 
      uniform mat4 uModelToWorldMatrix;
      uniform mat4 uWorldToScreenMatrix;
 
      void main(void)
      {
        vVertexColor = aVertexColor;
 
        gl_Position = uWorldToScreenMatrix * uModelToWorldMatrix * vec4(aPosition + aPositionOffset, 1.0);
      }
    ",
    "fragmentShader" : "
      #ifdef GL_ES
      precision mediump float;
      #endif
 
      varying vec4 vVertexColor; // interpolated across triangular face
 
      void main(void)
      {
        gl_FragColor = vVertexColor;
      }
    "
  }]
}
